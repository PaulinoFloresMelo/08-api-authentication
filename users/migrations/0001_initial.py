# Generated by Django 5.1.1 on 2024-11-28 13:32

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tbl_address',
            fields=[
                ('addr_id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='address id')),
                ('zip_code', models.CharField(max_length=32)),
                ('name_roadway', models.CharField(max_length=150)),
                ('ins_number', models.CharField(max_length=10)),
                ('locality', models.CharField(max_length=10)),
                ('federal_entity', models.CharField(max_length=70)),
                ('type_road', models.CharField(max_length=100)),
                ('out_number', models.CharField(max_length=10)),
                ('neighborhood', models.CharField(max_length=100)),
                ('municipality', models.CharField(max_length=100)),
                ('ref_btw_st', models.CharField(max_length=100)),
                ('ref_and_st', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_organization',
            fields=[
                ('org_id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='organization id')),
                ('rfc', models.CharField(max_length=12)),
                ('company_name', models.CharField(max_length=254)),
                ('capital_regime', models.CharField(max_length=250)),
                ('trade_name', models.CharField(max_length=250)),
                ('start_operations', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status_sat', models.BooleanField()),
                ('path_csf', models.CharField(max_length=255)),
                ('ase_key', models.CharField(max_length=10)),
                ('asf_key', models.CharField(max_length=10)),
                ('admin_period', models.CharField(max_length=15)),
                ('last_change_status_sat_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('registration_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cancellation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_updated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('empl_id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='Employee id')),
                ('rfc', models.CharField(max_length=13, validators=[django.core.validators.MinLengthValidator(13)])),
                ('curp', models.CharField(max_length=18, validators=[django.core.validators.MinLengthValidator(18)])),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('trade_name', models.CharField(max_length=255)),
                ('start_operations', models.DateField()),
                ('status_sat', models.BooleanField(default=False)),
                ('last_change_status_sat_date', models.DateField()),
                ('registration_date', models.DateField()),
                ('cancellation_date', models.DateField()),
                ('last_updated_date', models.DateField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
